apiVersion: apps/v1
kind: Deployment
metadata:
  name: kubernetestestapp
  labels:
    app: kubernetestestapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kubernetestestapp
  template:
    metadata:
      labels:
        app: kubernetestestapp
    spec:
      containers:
        - name: kubernetestestapp
          image: prasol/kubernetestestapp
          ports:
            - containerPort: 8080
              protocol: TCP
          # readinessProbe:
          #   httpGet:
          #     path: /
          #     port: 80
          resources:
            limits:
              memory: "50Mi"
            requests:
              memory: "50Mi"
              cpu: "250m"
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          env:
            - name: HOST_NAME
              value: "kubernetes-pod"
            - name: ASPNETCORE_ENVIRONMENT
              value: "Development"
            - name: ConnectionStrings__DefaultConnection
              value: "Server=tcp:mssql-service,1433;Database=KubernetesTestApp;User Id=sa;Password=Password123#;MultipleActiveResultSets=true;Encrypt=false"
      securityContext:
        seccompProfile:
          type: RuntimeDefault
        runAsUser: 1001
        runAsGroup: 1001
        runAsNonRoot: true
---
apiVersion: v1
kind: Service
metadata:
  name: tomo-app-service
spec:
  type: ClusterIP
  selector:
    app: kubernetestestapp
  ports:
    - protocol: TCP
      port: 3000 # the port on which the service is exposed. Other pods can communicate with it via this port.
      targetPort: 8080 # the actual port on which your container is deployed. The service sends requests to this port and the pod container must listen to the same port.